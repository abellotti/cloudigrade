REST API Example Usage
======================

This document summarizes some examples of the cloudigrade REST API.

..
    This document can be regenerated by a developer using the following
    make target from the root directory of a sandbox environment having
    database ports forwarded locally:

    make docs-api-examples

    Please note that this is a destructive operation because building the data
    for the document requires creating, updating, and deleting many objects.

Examples here use the ``http`` command from
`httpie <https://httpie.org/>`_. If you want to follow along with these
exact commands, you may need to ``brew install httpie`` or
``pip install httpie`` first.

These examples also assume you are running cloudigrade on
``localhost:8080`` either via ``docker-compose`` or Django’s built-in
``runserver`` command and that you have correctly configured
cloudigrade’s environment with appropriate variables to allow it to talk
to the various clouds (e.g. ``AWS_ACCESS_KEY_ID``).

Authorization
-------------

The v2 API is authenticated with 3scale. In order to authenticate a `HTTP_X_RH_IDENTITY` header must be included in the request.
This header must be the base64 encoded version of:


.. code:: json

    {
        "identity": {
            "user": {
                "email": "admin@example.com"
            }
        }
    }

.. code:: bash

    HTTP_X_RH_IDENTITY=eyJpZGVudGl0eSI6IHsidXNlciI6IHsiZW1haWwiOiAiYWRtaW5AZXhhbXBsZS5jb20ifX19

Overview
--------

The following resource paths are currently available:

-  ``/api/v2/account/`` returns account data
-  ``/api/v2/instance/`` returns instance data
-  ``/api/v2/image/`` returns image data
-  ``/api/v2/sysconfig/`` returns sysconfig data


User Setup
------------------

When accessing any endpoint with the HTTP_X_RH_IDENTITY header,
if the user found in the header does not exist, it will be created.
Users can also be created using Django Admin.


Customer Account Setup
----------------------

Create an AWS account
~~~~~~~~~~~~~~~~~~~~~

This request may take a few seconds because of multiple round-trip calls
to the AWS APIs for each region. The "name" attribute is required and has a
maximum supported length of 256 characters.

Request:

.. code:: bash

    http post localhost:8080/v2/accounts/ "X-RH-IDENTITY:${HTTP_X_RH_IDENTITY}" \
        account_arn="arn:aws:iam::118445225639:role/role-for-cloudigrade" \
        name="yet another account" \
        cloud_type="aws"

Response:

::

    HTTP/1.1 201 Created
    Allow: GET, POST, HEAD, OPTIONS
    Content-Length: 392
    Content-Type: application/json
    Vary: Accept
    X-CLOUDIGRADE-REQUEST-ID: 02c4b804-9233-45f5-8eb3-5bc0cdac7431
    X-Frame-Options: SAMEORIGIN

    {
        "account_id": 3,
        "cloud_type": "aws",
        "content_object": {
            "account_arn": "arn:aws:iam::118445225639:role/role-for-cloudigrade",
            "aws_account_id": "118445225639",
            "aws_cloud_account_id": 3,
            "created_at": "2019-06-10T14:45:08.839982Z",
            "updated_at": "2019-06-10T14:45:08.840007Z"
        },
        "created_at": "2019-06-10T14:45:08.841418Z",
        "name": "yet another account",
        "updated_at": "2019-06-10T14:45:08.841436Z",
        "user_id": 2
    }

If you attempt to create an AWS account for an ARN that is already in
the system, you should get a 400 error.

Request:

.. code:: bash

    http post localhost:8080/v2/accounts/ "X-RH-IDENTITY:${HTTP_X_RH_IDENTITY}" \
        account_arn="arn:aws:iam::118445225639:role/role-for-cloudigrade" \
        name="but this account already exists" \
        cloud_type="aws"

Response:

::

    HTTP/1.1 400 Bad Request
    Allow: GET, POST, HEAD, OPTIONS
    Content-Length: 70
    Content-Type: application/json
    Vary: Accept
    X-CLOUDIGRADE-REQUEST-ID: afb87c71-4cf1-49be-9bbc-85c1ae7eaba0
    X-Frame-Options: SAMEORIGIN

    {
        "account_arn": [
            "An ARN already exists for account \"118445225639\""
        ]
    }


Customer Account Info
---------------------

List all accounts
~~~~~~~~~~~~~~~~~

Request:

.. code:: bash

    http localhost:8080/v2/accounts/ "X-RH-IDENTITY:${HTTP_X_RH_IDENTITY}"

Response:

::

    HTTP/1.1 200 OK
    Allow: GET, POST, HEAD, OPTIONS
    Content-Length: 956
    Content-Type: application/json
    Vary: Accept
    X-CLOUDIGRADE-REQUEST-ID: 026d0ecb-3123-475a-ba5a-da181379cf06
    X-Frame-Options: SAMEORIGIN

    {
        "data": [
            {
                "account_id": 3,
                "cloud_type": "aws",
                "content_object": {
                    "account_arn": "arn:aws:iam::118445225639:role/role-for-cloudigrade",
                    "aws_account_id": "118445225639",
                    "aws_cloud_account_id": 3,
                    "created_at": "2019-06-10T14:45:08.839982Z",
                    "updated_at": "2019-06-10T14:45:08.840007Z"
                },
                "created_at": "2019-06-10T14:45:08.841418Z",
                "name": "yet another account",
                "updated_at": "2019-06-10T14:45:08.841436Z",
                "user_id": 2
            },
            {
                "account_id": 2,
                "cloud_type": "aws",
                "content_object": {
                    "account_arn": "arn:aws:iam::599808821870:role/role-for-cloudigrade",
                    "aws_account_id": "599808821870",
                    "aws_cloud_account_id": 2,
                    "created_at": "2019-05-27T00:00:00Z",
                    "updated_at": "2019-06-10T14:45:08.648920Z"
                },
                "created_at": "2019-05-27T00:00:00Z",
                "name": "greatest account ever",
                "updated_at": "2019-06-10T14:45:08.651462Z",
                "user_id": 2
            }
        ],
        "links": {
            "first": "/api/cloudigrade/v2/accounts/?limit=10&offset=0",
            "last": "/api/cloudigrade/v2/accounts/?limit=10&offset=0",
            "next": null,
            "previous": null
        },
        "meta": {
            "count": 2
        }
    }


Retrieve a specific account
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Request:

.. code:: bash

    http localhost:8080/v2/accounts/3/ "X-RH-IDENTITY:${HTTP_X_RH_IDENTITY}"

Response:

::

    HTTP/1.1 200 OK
    Allow: GET, PUT, PATCH, DELETE, HEAD, OPTIONS
    Content-Length: 392
    Content-Type: application/json
    Vary: Accept
    X-CLOUDIGRADE-REQUEST-ID: 8ff07e5c-69f7-4884-b597-ac82026a0827
    X-Frame-Options: SAMEORIGIN

    {
        "account_id": 3,
        "cloud_type": "aws",
        "content_object": {
            "account_arn": "arn:aws:iam::118445225639:role/role-for-cloudigrade",
            "aws_account_id": "118445225639",
            "aws_cloud_account_id": 3,
            "created_at": "2019-06-10T14:45:08.839982Z",
            "updated_at": "2019-06-10T14:45:08.840007Z"
        },
        "created_at": "2019-06-10T14:45:08.841418Z",
        "name": "yet another account",
        "updated_at": "2019-06-10T14:45:08.841436Z",
        "user_id": 2
    }


Update a specific account
~~~~~~~~~~~~~~~~~~~~~~~~~

You can update the account object via either HTTP PATCH or HTTP PUT. All
updates require you to specify the "resourcetype".

At the time of this writing, only the "name" property can be changed on the
account object.

Request:

.. code:: bash

    http patch localhost:8080/v2/accounts/3/ "X-RH-IDENTITY:${HTTP_X_RH_IDENTITY}" \
        name="name updated using PATCH"

Response:

::

    HTTP/1.1 200 OK
    Allow: GET, PUT, PATCH, DELETE, HEAD, OPTIONS
    Content-Length: 397
    Content-Type: application/json
    Vary: Accept
    X-CLOUDIGRADE-REQUEST-ID: 29d7c3b1-31c9-4b0f-989e-b48a895796a7
    X-Frame-Options: SAMEORIGIN

    {
        "account_id": 3,
        "cloud_type": "aws",
        "content_object": {
            "account_arn": "arn:aws:iam::118445225639:role/role-for-cloudigrade",
            "aws_account_id": "118445225639",
            "aws_cloud_account_id": 3,
            "created_at": "2019-06-10T14:45:08.839982Z",
            "updated_at": "2019-06-10T14:45:08.840007Z"
        },
        "created_at": "2019-06-10T14:45:08.841418Z",
        "name": "name updated using PATCH",
        "updated_at": "2019-06-10T14:45:08.915212Z",
        "user_id": 2
    }

Because PUT is intended to replace objects, it must include all potentially
writable fields, which includes "name" and "account_arn".

Request:

.. code:: bash

    http put localhost:8080/v2/accounts/3/ "X-RH-IDENTITY:${HTTP_X_RH_IDENTITY}" \
        name="name updated using PUT" \
        account_arn="arn:aws:iam::118445225639:role/role-for-cloudigrade" \
        cloud_type="aws"

Response:

::

    HTTP/1.1 200 OK
    Allow: GET, PUT, PATCH, DELETE, HEAD, OPTIONS
    Content-Length: 463
    Content-Type: application/json
    Vary: Accept
    X-CLOUDIGRADE-REQUEST-ID: 39f1522c-04bb-4412-9948-0ac314c1a8ab
    X-Frame-Options: SAMEORIGIN

    {
        "account_arn": "arn:aws:iam::118445225639:role/role-for-cloudigrade",
        "account_id": 3,
        "cloud_type": "aws",
        "content_object": {
            "account_arn": "arn:aws:iam::118445225639:role/role-for-cloudigrade",
            "aws_account_id": "118445225639",
            "aws_cloud_account_id": 3,
            "created_at": "2019-06-10T14:45:08.839982Z",
            "updated_at": "2019-06-10T14:45:08.840007Z"
        },
        "created_at": "2019-06-10T14:45:08.841418Z",
        "name": "name updated using PUT",
        "updated_at": "2019-06-10T14:45:08.955186Z",
        "user_id": 2
    }

You cannot change the ARN via PUT or PATCH.

Request:

.. code:: bash

    http patch localhost:8080/v2/accounts/3/ "X-RH-IDENTITY:${HTTP_X_RH_IDENTITY}" \
        account_arn="arn:aws:iam::999999999999:role/role-for-cloudigrade"

Response:

::

    HTTP/1.1 400 Bad Request
    Allow: GET, PUT, PATCH, DELETE, HEAD, OPTIONS
    Content-Length: 50
    Content-Type: application/json
    Vary: Accept
    X-CLOUDIGRADE-REQUEST-ID: 25c22a31-9222-4ee7-b3a3-1d7e254b8371
    X-Frame-Options: SAMEORIGIN

    {
        "account_arn": [
            "You cannot update account_arn."
        ]
    }


Instance Info
-------------

List all instances
~~~~~~~~~~~~~~~~~~

Request:

.. code:: bash

    http localhost:8080/v2/instances/ "X-RH-IDENTITY:${HTTP_X_RH_IDENTITY}"

Response:

::

    HTTP/1.1 200 OK
    Allow: GET, HEAD, OPTIONS
    Content-Length: 1537
    Content-Type: application/json
    Vary: Accept
    X-CLOUDIGRADE-REQUEST-ID: df4824da-6293-4af2-9513-3ef30213fa9d
    X-Frame-Options: SAMEORIGIN

    {
        "data": [
            {
                "cloud_account": "http://localhost:8080/v2/accounts/2/",
                "cloud_account_id": 2,
                "cloud_type": "aws",
                "content_object": {
                    "aws_instance_id": 2,
                    "created_at": "2019-06-10T14:45:08.658167Z",
                    "ec2_instance_id": "i-3b55434c18b3e5374",
                    "region": "eu-west-1",
                    "updated_at": "2019-06-10T14:45:08.658182Z"
                },
                "created_at": "2019-06-10T14:45:08.660216Z",
                "instance_id": 2,
                "machine_image": "http://localhost:8080/v2/images/2/",
                "machine_image_id": 2,
                "updated_at": "2019-06-10T14:45:08.660244Z"
            },
            {
                "cloud_account": "http://localhost:8080/v2/accounts/3/",
                "cloud_account_id": 2,
                "cloud_type": "aws",
                "content_object": {
                    "aws_instance_id": 3,
                    "created_at": "2019-06-10T14:45:08.670318Z",
                    "ec2_instance_id": "i-6eec058df6a58e6c4",
                    "region": "us-east-1",
                    "updated_at": "2019-06-10T14:45:08.670332Z"
                },
                "created_at": "2019-06-10T14:45:08.671483Z",
                "instance_id": 3,
                "machine_image": "http://localhost:8080/v2/images/3/",
                "machine_image_id": 3,
                "updated_at": "2019-06-10T14:45:08.671499Z"
            },
            {
                "cloud_account": "http://localhost:8080/v2/accounts/4/",
                "cloud_account_id": 2,
                "cloud_type": "aws",
                "content_object": {
                    "aws_instance_id": 4,
                    "created_at": "2019-06-10T14:45:08.681549Z",
                    "ec2_instance_id": "i-05d4ff5c54739c1ce",
                    "region": "us-east-2",
                    "updated_at": "2019-06-10T14:45:08.681567Z"
                },
                "created_at": "2019-06-10T14:45:08.682710Z",
                "instance_id": 4,
                "machine_image": "http://localhost:8080/v2/images/4/",
                "machine_image_id": 4,
                "updated_at": "2019-06-10T14:45:08.682725Z"
            }
        ],
        "links": {
            "first": "/api/cloudigrade/v2/instances/?limit=10&offset=0",
            "last": "/api/cloudigrade/v2/instances/?limit=10&offset=0",
            "next": null,
            "previous": null
        },
        "meta": {
            "count": 3
        }
    }


Retrieve a specific instance
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Request:

.. code:: bash

    http localhost:8080/v2/instances/2/ "X-RH-IDENTITY:${HTTP_X_RH_IDENTITY}"

Response:

::

    HTTP/1.1 200 OK
    Allow: GET, HEAD, OPTIONS
    Content-Length: 450
    Content-Type: application/json
    Vary: Accept
    X-CLOUDIGRADE-REQUEST-ID: 7c720136-c434-4471-9bb9-47d02e2ca791
    X-Frame-Options: SAMEORIGIN

    {
        "cloud_account": "http://localhost:8080/v2/accounts/2/",
        "cloud_account_id": 2,
        "cloud_type": "aws",
        "content_object": {
            "aws_instance_id": 2,
            "created_at": "2019-06-10T14:45:08.658167Z",
            "ec2_instance_id": "i-3b55434c18b3e5374",
            "region": "eu-west-1",
            "updated_at": "2019-06-10T14:45:08.658182Z"
        },
        "created_at": "2019-06-10T14:45:08.660216Z",
        "instance_id": 2,
        "machine_image": "http://localhost:8080/v2/images/2/",
        "machine_image_id": 2,
        "updated_at": "2019-06-10T14:45:08.660244Z"
    }


Filtering instances
~~~~~~~~~~~~~~~~~~~

You may include an optional "user_id" query string argument to filter results
down to a specific user.

Request:

.. code:: bash

    http localhost:8080/v2/instances/ "X-RH-IDENTITY:${HTTP_X_RH_IDENTITY}" \
        v2_user_id=="1"

Response:

::

    HTTP/1.1 200 OK
    Allow: GET, HEAD, OPTIONS
    Content-Length: 2017
    Content-Type: application/json
    Vary: Accept
    X-CLOUDIGRADE-REQUEST-ID: c39aac08-0730-4fcd-b44e-3629769a240c
    X-Frame-Options: SAMEORIGIN

    {
        "data": [
            {
                "cloud_account": "http://localhost:8080/v2/accounts/1/",
                "cloud_account_id": 1,
                "cloud_type": "aws",
                "content_object": {
                    "aws_instance_id": 1,
                    "created_at": "2019-06-10T14:45:08.636005Z",
                    "ec2_instance_id": "i-660984f48af2f1fe4",
                    "region": "ca-central-1",
                    "updated_at": "2019-06-10T14:45:08.636020Z"
                },
                "created_at": "2019-06-10T14:45:08.639823Z",
                "instance_id": 1,
                "machine_image": "http://localhost:8080/v2/images/1/",
                "machine_image_id": 1,
                "updated_at": "2019-06-10T14:45:08.639838Z"
            },
            {
                "cloud_account": "http://localhost:8080/v2/accounts/2/",
                "cloud_account_id": 2,
                "cloud_type": "aws",
                "content_object": {
                    "aws_instance_id": 2,
                    "created_at": "2019-06-10T14:45:08.658167Z",
                    "ec2_instance_id": "i-3b55434c18b3e5374",
                    "region": "eu-west-1",
                    "updated_at": "2019-06-10T14:45:08.658182Z"
                },
                "created_at": "2019-06-10T14:45:08.660216Z",
                "instance_id": 2,
                "machine_image": "http://localhost:8080/v2/images/2/",
                "machine_image_id": 2,
                "updated_at": "2019-06-10T14:45:08.660244Z"
            },
            {
                "cloud_account": "http://localhost:8080/v2/accounts/3/",
                "cloud_account_id": 2,
                "cloud_type": "aws",
                "content_object": {
                    "aws_instance_id": 3,
                    "created_at": "2019-06-10T14:45:08.670318Z",
                    "ec2_instance_id": "i-6eec058df6a58e6c4",
                    "region": "us-east-1",
                    "updated_at": "2019-06-10T14:45:08.670332Z"
                },
                "created_at": "2019-06-10T14:45:08.671483Z",
                "instance_id": 3,
                "machine_image": "http://localhost:8080/v2/images/3/",
                "machine_image_id": 3,
                "updated_at": "2019-06-10T14:45:08.671499Z"
            },
            {
                "cloud_account": "http://localhost:8080/v2/accounts/4/",
                "cloud_account_id": 2,
                "cloud_type": "aws",
                "content_object": {
                    "aws_instance_id": 4,
                    "created_at": "2019-06-10T14:45:08.681549Z",
                    "ec2_instance_id": "i-05d4ff5c54739c1ce",
                    "region": "us-east-2",
                    "updated_at": "2019-06-10T14:45:08.681567Z"
                },
                "created_at": "2019-06-10T14:45:08.682710Z",
                "instance_id": 4,
                "machine_image": "http://localhost:8080/v2/images/4/",
                "machine_image_id": 4,
                "updated_at": "2019-06-10T14:45:08.682725Z"
            }
        ],
        "links": {
            "first": "/api/cloudigrade/v2/instances/?limit=10&offset=0&v2_user_id=1",
            "last": "/api/cloudigrade/v2/instances/?limit=10&offset=0&v2_user_id=1",
            "next": null,
            "previous": null
        },
        "meta": {
            "count": 4
        }
    }


You may also include an optional "running_since" query string argument to filter for only
instances that have been running uninterrupted since the given time.

Request:

.. code:: bash

    http localhost:8080/v2/instances/ "X-RH-IDENTITY:${HTTP_X_RH_IDENTITY}" \
        running_since=="2019-06-10 14:45:08.613669+00:00"

Response:

::

    HTTP/1.1 200 OK
    Allow: GET, HEAD, OPTIONS
    Content-Length: 1650
    Content-Type: application/json
    Vary: Accept
    X-CLOUDIGRADE-REQUEST-ID: c9ee1b03-c73f-498c-9e35-5f603e83dd99
    X-Frame-Options: SAMEORIGIN

    {
        "data": [
            {
                "cloud_account": "http://localhost:8080/v2/accounts/1/",
                "cloud_account_id": 1,
                "cloud_type": "aws",
                "content_object": {
                    "aws_instance_id": 1,
                    "created_at": "2019-06-10T14:45:08.636005Z",
                    "ec2_instance_id": "i-660984f48af2f1fe4",
                    "region": "ca-central-1",
                    "updated_at": "2019-06-10T14:45:08.636020Z"
                },
                "created_at": "2019-06-10T14:45:08.639823Z",
                "instance_id": 1,
                "machine_image": "http://localhost:8080/v2/images/1/",
                "machine_image_id": 1,
                "updated_at": "2019-06-10T14:45:08.639838Z"
            },
            {
                "cloud_account": "http://localhost:8080/v2/accounts/2/",
                "cloud_account_id": 2,
                "cloud_type": "aws",
                "content_object": {
                    "aws_instance_id": 2,
                    "created_at": "2019-06-10T14:45:08.658167Z",
                    "ec2_instance_id": "i-3b55434c18b3e5374",
                    "region": "eu-west-1",
                    "updated_at": "2019-06-10T14:45:08.658182Z"
                },
                "created_at": "2019-06-10T14:45:08.660216Z",
                "instance_id": 2,
                "machine_image": "http://localhost:8080/v2/images/2/",
                "machine_image_id": 2,
                "updated_at": "2019-06-10T14:45:08.660244Z"
            },
            {
                "cloud_account": "http://localhost:8080/v2/accounts/3/",
                "cloud_account_id": 2,
                "cloud_type": "aws",
                "content_object": {
                    "aws_instance_id": 3,
                    "created_at": "2019-06-10T14:45:08.670318Z",
                    "ec2_instance_id": "i-6eec058df6a58e6c4",
                    "region": "us-east-1",
                    "updated_at": "2019-06-10T14:45:08.670332Z"
                },
                "created_at": "2019-06-10T14:45:08.671483Z",
                "instance_id": 3,
                "machine_image": "http://localhost:8080/v2/images/3/",
                "machine_image_id": 3,
                "updated_at": "2019-06-10T14:45:08.671499Z"
            }
        ],
        "links": {
            "first": "/api/cloudigrade/v2/instances/?limit=10&offset=0&running_since=2019-06-10+14%3A45%3A08.613669%2B00%3A00",
            "last": "/api/cloudigrade/v2/instances/?limit=10&offset=0&running_since=2019-06-10+14%3A45%3A08.613669%2B00%3A00",
            "next": null,
            "previous": null
        },
        "meta": {
            "count": 3
        }
    }


Machine Images
--------------

List all images
~~~~~~~~~~~~~~~

Below command will return all images that have been seen used by any instance for any account belonging to the user that makes the request.

Request:

.. code:: bash

    http localhost:8080/v2/images/ "X-RH-IDENTITY:${HTTP_X_RH_IDENTITY}"

Response:

::

    HTTP/1.1 200 OK
    Allow: GET, HEAD, OPTIONS
    Content-Length: 2479
    Content-Type: application/json
    Vary: Accept
    X-CLOUDIGRADE-REQUEST-ID: 477989d6-36b4-449f-95c5-b2af6f719ecf
    X-Frame-Options: SAMEORIGIN

    {
        "data": [
            {
                "cloud_type": "aws",
                "content_object": {
                    "aws_image_id": 2,
                    "created_at": "2019-06-10T14:45:08.654727Z",
                    "ec2_ami_id": "ami-7a561fe8",
                    "id": 2,
                    "is_cloud_access": false,
                    "is_marketplace": false,
                    "owner_aws_account_id": "599808821870",
                    "platform": "none",
                    "region": null,
                    "updated_at": "2019-06-10T14:45:08.654746Z"
                },
                "created_at": "2019-06-10T14:45:08.656984Z",
                "image_id": 2,
                "inspection_json": "{\"rhel_enabled_repos_found\": true}",
                "is_encrypted": false,
                "name": null,
                "openshift": true,
                "openshift_challenged": true,
                "openshift_detected": false,
                "rhel": true,
                "rhel_challenged": false,
                "rhel_detected": true,
                "rhel_enabled_repos_found": true,
                "rhel_product_certs_found": false,
                "rhel_release_files_found": false,
                "rhel_signed_packages_found": false,
                "status": "inspected",
                "updated_at": "2019-06-10T14:45:08.784668Z"
            },
            {
                "cloud_type": "aws",
                "content_object": {
                    "aws_image_id": 3,
                    "created_at": "2019-06-10T14:45:08.666678Z",
                    "ec2_ami_id": "ami-651c63a2",
                    "id": 3,
                    "is_cloud_access": false,
                    "is_marketplace": false,
                    "owner_aws_account_id": "599808821870",
                    "platform": "none",
                    "region": null,
                    "updated_at": "2019-06-10T14:45:08.666701Z"
                },
                "created_at": "2019-06-10T14:45:08.669249Z",
                "image_id": 3,
                "inspection_json": "{\"rhel_enabled_repos_found\": true}",
                "is_encrypted": false,
                "name": null,
                "openshift": true,
                "openshift_challenged": true,
                "openshift_detected": false,
                "rhel": true,
                "rhel_challenged": false,
                "rhel_detected": true,
                "rhel_enabled_repos_found": true,
                "rhel_product_certs_found": false,
                "rhel_release_files_found": false,
                "rhel_signed_packages_found": false,
                "status": "inspected",
                "updated_at": "2019-06-10T14:45:08.785878Z"
            },
            {
                "cloud_type": "aws",
                "content_object": {
                    "aws_image_id": 4,
                    "created_at": "2019-06-10T14:45:08.675212Z",
                    "ec2_ami_id": "ami-1b489c4a",
                    "id": 4,
                    "is_cloud_access": false,
                    "is_marketplace": false,
                    "owner_aws_account_id": "599808821870",
                    "platform": "none",
                    "region": null,
                    "updated_at": "2019-06-10T14:45:08.675237Z"
                },
                "created_at": "2019-06-10T14:45:08.678374Z",
                "image_id": 4,
                "inspection_json": "{\"rhel_enabled_repos_found\": true}",
                "is_encrypted": false,
                "name": null,
                "openshift": true,
                "openshift_challenged": true,
                "openshift_detected": false,
                "rhel": true,
                "rhel_challenged": false,
                "rhel_detected": true,
                "rhel_enabled_repos_found": true,
                "rhel_product_certs_found": false,
                "rhel_release_files_found": false,
                "rhel_signed_packages_found": false,
                "status": "inspected",
                "updated_at": "2019-06-10T14:45:08.786999Z"
            }
        ],
        "links": {
            "first": "/api/cloudigrade/v2/images/?limit=10&offset=0",
            "last": "/api/cloudigrade/v2/images/?limit=10&offset=0",
            "next": null,
            "previous": null
        },
        "meta": {
            "count": 3
        }
    }

When authenticating as a superuser, this will return all images used by instances in all accounts.

A superuser can also filter the images down to a those used by instances for accounts belonging to a specific user by using the optional
``user_id`` query string argument.

Request:

.. code:: bash

    http localhost:8080/v2/images/ "X-RH-IDENTITY:${HTTP_X_RH_IDENTITY}" \
        user_id=="1"

Response:

::

    HTTP/1.1 200 OK
    Allow: GET, HEAD, OPTIONS
    Content-Length: 934
    Content-Type: application/json
    Vary: Accept
    X-CLOUDIGRADE-REQUEST-ID: 41094cfd-fda9-4925-b4f3-c530b7477f29
    X-Frame-Options: SAMEORIGIN

    {
        "data": [
            {
                "cloud_type": "aws",
                "content_object": {
                    "aws_image_id": 1,
                    "created_at": "2019-06-10T14:45:08.628772Z",
                    "ec2_ami_id": "ami-41d3300f",
                    "id": 1,
                    "is_cloud_access": false,
                    "is_marketplace": false,
                    "owner_aws_account_id": "440712466801",
                    "platform": "none",
                    "region": null,
                    "updated_at": "2019-06-10T14:45:08.628812Z"
                },
                "created_at": "2019-06-10T14:45:08.634419Z",
                "image_id": 1,
                "inspection_json": null,
                "is_encrypted": false,
                "name": null,
                "openshift": false,
                "openshift_challenged": false,
                "openshift_detected": false,
                "rhel": false,
                "rhel_challenged": false,
                "rhel_detected": false,
                "rhel_enabled_repos_found": false,
                "rhel_product_certs_found": false,
                "rhel_release_files_found": false,
                "rhel_signed_packages_found": false,
                "status": "pending",
                "updated_at": "2019-06-10T14:45:08.634436Z"
            }
        ],
        "links": {
            "first": "/api/cloudigrade/v2/images/?limit=10&offset=0&user_id=1",
            "last": "/api/cloudigrade/v2/images/?limit=10&offset=0&user_id=1",
            "next": null,
            "previous": null
        },
        "meta": {
            "count": 1
        }
    }


Retrieve a specific image
~~~~~~~~~~~~~~~~~~~~~~~~~

Request:

.. code:: bash

    http localhost:8080/v2/images/2/ "X-RH-IDENTITY:${HTTP_X_RH_IDENTITY}"

Response:

::

    HTTP/1.1 200 OK
    Allow: GET, PUT, PATCH, HEAD, OPTIONS
    Content-Length: 766
    Content-Type: application/json
    Vary: Accept
    X-CLOUDIGRADE-REQUEST-ID: f6f0cf1f-32ab-4be8-a7be-c223238f23e3
    X-Frame-Options: SAMEORIGIN

    {
        "cloud_type": "aws",
        "content_object": {
            "aws_image_id": 2,
            "created_at": "2019-06-10T14:45:08.654727Z",
            "ec2_ami_id": "ami-7a561fe8",
            "id": 2,
            "is_cloud_access": false,
            "is_marketplace": false,
            "owner_aws_account_id": "599808821870",
            "platform": "none",
            "region": null,
            "updated_at": "2019-06-10T14:45:08.654746Z"
        },
        "created_at": "2019-06-10T14:45:08.656984Z",
        "image_id": 2,
        "inspection_json": "{\"rhel_enabled_repos_found\": true}",
        "is_encrypted": false,
        "name": null,
        "openshift": true,
        "openshift_challenged": true,
        "openshift_detected": false,
        "rhel": true,
        "rhel_challenged": false,
        "rhel_detected": true,
        "rhel_enabled_repos_found": true,
        "rhel_product_certs_found": false,
        "rhel_release_files_found": false,
        "rhel_signed_packages_found": false,
        "status": "inspected",
        "updated_at": "2019-06-10T14:45:08.784668Z"
    }


Reinspect a specific image
~~~~~~~~~~~~~~~~~~~~~~~~~~
cloudigrade/account/v2/serializers.py
Restart image inspection to deal with failed inspections or repeat inspection for the sake of testing.

Note that this command is only accessible by superusers.

Request:

.. code:: bash

    http post localhost:8080/v2/images/2/reinspect/ "X-RH-IDENTITY:${HTTP_X_RH_IDENTITY}"

Response:

::

    HTTP/1.1 200 OK
    Allow: POST, OPTIONS
    Content-Length: 764
    Content-Type: application/json
    Vary: Accept
    X-CLOUDIGRADE-REQUEST-ID: 002dec6e-e7dc-4c9b-bca6-9019cb2adc4a
    X-Frame-Options: SAMEORIGIN

    {
        "cloud_type": "aws",
        "content_object": {
            "aws_image_id": 2,
            "created_at": "2019-06-10T14:45:08.654727Z",
            "ec2_ami_id": "ami-7a561fe8",
            "id": 2,
            "is_cloud_access": false,
            "is_marketplace": false,
            "owner_aws_account_id": "599808821870",
            "platform": "none",
            "region": null,
            "updated_at": "2019-06-10T14:45:08.654746Z"
        },
        "created_at": "2019-06-10T14:45:08.656984Z",
        "image_id": 2,
        "inspection_json": "{\"rhel_enabled_repos_found\": true}",
        "is_encrypted": false,
        "name": null,
        "openshift": true,
        "openshift_challenged": true,
        "openshift_detected": false,
        "rhel": true,
        "rhel_challenged": false,
        "rhel_detected": true,
        "rhel_enabled_repos_found": true,
        "rhel_product_certs_found": false,
        "rhel_release_files_found": false,
        "rhel_signed_packages_found": false,
        "status": "pending",
        "updated_at": "2019-06-10T14:45:09.231166Z"
    }


Issuing challenges/flags
~~~~~~~~~~~~~~~~~~~~~~~~

Note that ``resourcetype`` is required when making these calls.

Request:

.. code:: bash

    http patch localhost:8080/v2/images/2/ "X-RH-IDENTITY:${HTTP_X_RH_IDENTITY}" \
        rhel_challenged="True"

Response:

::

    HTTP/1.1 200 OK
    Allow: GET, PUT, PATCH, HEAD, OPTIONS
    Content-Length: 764
    Content-Type: application/json
    Vary: Accept
    X-CLOUDIGRADE-REQUEST-ID: 35624e0d-f9ec-4fe4-a1b3-f0cc93dbb053
    X-Frame-Options: SAMEORIGIN

    {
        "cloud_type": "aws",
        "content_object": {
            "aws_image_id": 2,
            "created_at": "2019-06-10T14:45:08.654727Z",
            "ec2_ami_id": "ami-7a561fe8",
            "id": 2,
            "is_cloud_access": false,
            "is_marketplace": false,
            "owner_aws_account_id": "599808821870",
            "platform": "none",
            "region": null,
            "updated_at": "2019-06-10T14:45:08.654746Z"
        },
        "created_at": "2019-06-10T14:45:08.656984Z",
        "image_id": 2,
        "inspection_json": "{\"rhel_enabled_repos_found\": true}",
        "is_encrypted": false,
        "name": null,
        "openshift": true,
        "openshift_challenged": true,
        "openshift_detected": false,
        "rhel": false,
        "rhel_challenged": true,
        "rhel_detected": true,
        "rhel_enabled_repos_found": true,
        "rhel_product_certs_found": false,
        "rhel_release_files_found": false,
        "rhel_signed_packages_found": false,
        "status": "pending",
        "updated_at": "2019-06-10T14:45:09.269550Z"
    }

If you'd like to remove a challenge, simply send the same challenge with False as the value.

Request:

.. code:: bash

    http patch localhost:8080/v2/images/2/ "X-RH-IDENTITY:${HTTP_X_RH_IDENTITY}" \
        rhel_challenged="False"

Response:

::

    HTTP/1.1 200 OK
    Allow: GET, PUT, PATCH, HEAD, OPTIONS
    Content-Length: 764
    Content-Type: application/json
    Vary: Accept
    X-CLOUDIGRADE-REQUEST-ID: cefba38f-1b74-48ab-b3d7-ac416d2324fb
    X-Frame-Options: SAMEORIGIN

    {
        "cloud_type": "aws",
        "content_object": {
            "aws_image_id": 2,
            "created_at": "2019-06-10T14:45:08.654727Z",
            "ec2_ami_id": "ami-7a561fe8",
            "id": 2,
            "is_cloud_access": false,
            "is_marketplace": false,
            "owner_aws_account_id": "599808821870",
            "platform": "none",
            "region": null,
            "updated_at": "2019-06-10T14:45:08.654746Z"
        },
        "created_at": "2019-06-10T14:45:08.656984Z",
        "image_id": 2,
        "inspection_json": "{\"rhel_enabled_repos_found\": true}",
        "is_encrypted": false,
        "name": null,
        "openshift": true,
        "openshift_challenged": true,
        "openshift_detected": false,
        "rhel": true,
        "rhel_challenged": false,
        "rhel_detected": true,
        "rhel_enabled_repos_found": true,
        "rhel_product_certs_found": false,
        "rhel_release_files_found": false,
        "rhel_signed_packages_found": false,
        "status": "pending",
        "updated_at": "2019-06-10T14:45:09.318363Z"
    }

You can challenge both at the same time.

Request:

.. code:: bash

    http patch localhost:8080/v2/images/2/ "X-RH-IDENTITY:${HTTP_X_RH_IDENTITY}" \
        rhel_challenged="True" \
        openshift_challenged="True"

Response:

::

    HTTP/1.1 200 OK
    Allow: GET, PUT, PATCH, HEAD, OPTIONS
    Content-Length: 764
    Content-Type: application/json
    Vary: Accept
    X-CLOUDIGRADE-REQUEST-ID: c74308c4-ba0b-4886-a77f-c8ddd4aac52a
    X-Frame-Options: SAMEORIGIN

    {
        "cloud_type": "aws",
        "content_object": {
            "aws_image_id": 2,
            "created_at": "2019-06-10T14:45:08.654727Z",
            "ec2_ami_id": "ami-7a561fe8",
            "id": 2,
            "is_cloud_access": false,
            "is_marketplace": false,
            "owner_aws_account_id": "599808821870",
            "platform": "none",
            "region": null,
            "updated_at": "2019-06-10T14:45:08.654746Z"
        },
        "created_at": "2019-06-10T14:45:08.656984Z",
        "image_id": 2,
        "inspection_json": "{\"rhel_enabled_repos_found\": true}",
        "is_encrypted": false,
        "name": null,
        "openshift": true,
        "openshift_challenged": true,
        "openshift_detected": false,
        "rhel": false,
        "rhel_challenged": true,
        "rhel_detected": true,
        "rhel_enabled_repos_found": true,
        "rhel_product_certs_found": false,
        "rhel_release_files_found": false,
        "rhel_signed_packages_found": false,
        "status": "pending",
        "updated_at": "2019-06-10T14:45:09.362530Z"
    }


Report Commands
---------------

These APIs may be used to generate calculated and aggregated report data.

Daily Max Concurrency
~~~~~~~~~~~~~~~~~~~~~

The concurrency API returns a paginated list of days, and each day includes the
maximum concurrent number of instances, number of vCPUs, and amount of memory
in GBs seen concurrently in use during that day.

Optional ``start_date`` is an ISO-8601 date that is the inclusive start of the
reporting period. If not defined, default is "today".

Optional ``end_date`` is an ISO-8601 date that is the exclusive end of the
reporting period. If not defined, default is "tomorrow".

Request:

.. code:: bash

    http localhost:8080/v2/concurrent/ "X-RH-IDENTITY:${HTTP_X_RH_IDENTITY}" \
        start_date=="2019-06-03"

Response:

::

    HTTP/1.1 200 OK
    Allow: GET, HEAD, OPTIONS
    Content-Length: 724
    Content-Type: application/json
    Vary: Accept
    X-CLOUDIGRADE-REQUEST-ID: 03ec272d-0d2d-4c97-8716-b7a71a1d3cb1
    X-Frame-Options: SAMEORIGIN

    {
        "data": [
            {
                "date": "2019-06-03",
                "instances": 1,
                "memory": 15.25,
                "vcpu": 2.0
            },
            {
                "date": "2019-06-04",
                "instances": 1,
                "memory": 15.25,
                "vcpu": 2.0
            },
            {
                "date": "2019-06-05",
                "instances": 1,
                "memory": 15.25,
                "vcpu": 2.0
            },
            {
                "date": "2019-06-06",
                "instances": 1,
                "memory": 15.25,
                "vcpu": 2.0
            },
            {
                "date": "2019-06-07",
                "instances": 1,
                "memory": 15.25,
                "vcpu": 2.0
            },
            {
                "date": "2019-06-08",
                "instances": 0,
                "memory": 0.0,
                "vcpu": 0.0
            },
            {
                "date": "2019-06-09",
                "instances": 1,
                "memory": 15.25,
                "vcpu": 2.0
            },
            {
                "date": "2019-06-10",
                "instances": 1,
                "memory": 15.25,
                "vcpu": 2.0
            }
        ],
        "links": {
            "first": "/api/cloudigrade/v2/concurrent/?limit=10&offset=0&start_date=2019-06-03",
            "last": "/api/cloudigrade/v2/concurrent/?limit=10&offset=0&start_date=2019-06-03",
            "next": null,
            "previous": null
        },
        "meta": {
            "count": 8
        }
    }



Miscellaneous Commands
----------------------

Retrieve current publicly-viewable system configuration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The sysconfig endpoint includes the AWS cloud account id used by the application, AWS policies used for acting on behalf of customers, and the currently deployed backend version.

Request:

.. code:: bash

    http localhost:8080/v2/sysconfig/ "X-RH-IDENTITY:${HTTP_X_RH_IDENTITY}"

Response:

::

    HTTP/1.1 200 OK
    Allow: GET, HEAD, OPTIONS
    Content-Length: 608
    Content-Type: application/json
    Vary: Accept
    X-CLOUDIGRADE-REQUEST-ID: d3f22e49-b1f3-4708-b6b4-e92b8efe64f3
    X-Frame-Options: SAMEORIGIN

    {
        "aws_account_id": 828466477913,
        "aws_policies": {
            "traditional_inspection": {
                "Statement": [
                    {
                        "Action": [
                            "ec2:DescribeImages",
                            "ec2:DescribeInstances",
                            "ec2:ModifySnapshotAttribute",
                            "ec2:DescribeSnapshotAttribute",
                            "ec2:DescribeSnapshots",
                            "ec2:CopyImage",
                            "ec2:CreateTags",
                            "ec2:DescribeRegions",
                            "cloudtrail:CreateTrail",
                            "cloudtrail:UpdateTrail",
                            "cloudtrail:PutEventSelectors",
                            "cloudtrail:DescribeTrails",
                            "cloudtrail:StartLogging",
                            "cloudtrail:StopLogging"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Sid": "CloudigradePolicy"
                    }
                ],
                "Version": "2012-10-17"
            }
        },
        "version": "489-cloudigrade-version - d2b30c637ce3788e22990b21434bac2edcfb7ede"
    }
